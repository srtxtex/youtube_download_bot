import os
import re
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes
from background import keep_alive  # –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞–±–æ—Ç—ã Flask

YOUTUBE_REGEX = r'(https?://(?:www\.)?youtu(?:\.be|be\.com)/[a-zA-Z0-9_\-?&=]+)'

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç
    if update.message is None or update.message.text is None:
        return
    
    # –ò—â–µ–º YouTube —Å—Å—ã–ª–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    matches = re.findall(YOUTUBE_REGEX, update.message.text)
    if matches:
        url = matches[0]
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        chat_type = update.message.chat.type
        username = "Unknown"
        if update.message.from_user:
            username = update.message.from_user.username if update.message.from_user.username else update.message.from_user.first_name
        print(f"YouTube —Å—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ {chat_type} –æ—Ç {username}: {url}")
        
        msg = await update.message.reply_text("üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        video_path = download_youtube_video(url)
        
        if video_path:
            with open(video_path, 'rb') as video_file:
                await context.bot.send_video(
                    chat_id=update.message.chat_id,
                    video=video_file,
                    caption=f'üé¨ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ –¥–ª—è @{username}'
                )
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.remove(video_path)
            print(f"–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_type}")
        else:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É.")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ..."
        await msg.delete()

def download_youtube_video(url):
    import yt_dlp
    output = 'temp_video.mp4'
    ydl_opts = {
        'outtmpl': output,
        'format': 'mp4',
        'quiet': True,
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        try:
            ydl.download([url])
            return output
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            return None

if __name__ == "__main__":
    import logging
    logging.basicConfig(level=logging.INFO)
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ Replit
    
    if not bot_token:
        print("Error: TELEGRAM_BOT_TOKEN environment variable is not set!")
        exit(1)
    
    keep_alive()  # –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ Flask
    application = Application.builder().token(bot_token).build()
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —á–∞—Ç—ã –∏ –≥—Ä—É–ø–ø—ã)
    application.add_handler(MessageHandler(
        filters.TEXT & (~filters.COMMAND), 
        handle_message
    ))
    application.run_polling()
